/** 
 * This class 'CodeGenExample.java' was generated by RedDeer Code Generator. 
 * Selected optional:
 *		Getter
 *		Setter
 *		Action method
 *		Generate static constants
 *		Include all wizard pages
 *		Allow inheriting (Only if are included all wizard pages)
 */
package org.eclipse.reddeer.codegen.example.utils;

import org.eclipse.reddeer.jface.wizard.WizardDialog;
import org.eclipse.reddeer.swt.impl.button.PushButton;
import org.eclipse.reddeer.swt.impl.group.DefaultGroup;
import org.eclipse.reddeer.swt.impl.button.RadioButton;
import org.eclipse.reddeer.swt.impl.button.CheckBox;
import org.eclipse.reddeer.swt.impl.text.LabeledText;
import org.eclipse.reddeer.swt.impl.shell.DefaultShell;

public class NewRedDeerTestPluginPage extends WizardDialog {

	// Generated class methods
	public void clickDeselectAllBTN() {
		new PushButton("Deselect All").click();
	}

	public void clickSelectAllBTN() {
		new PushButton("Select All").click();
	}

	public void clickBrowseBTN() {
		new PushButton("Browse...").click();
	}

	public RadioButton getApplicationIdRDBgroup() {
		return new RadioButton(new DefaultGroup("Program to test"), "Application id:");
	}

	public String getTextApplicationId() {
		return new RadioButton(new DefaultGroup("Program to test"), "Application id:").getText();
	}

	public RadioButton getProductIdRDBgroup() {
		return new RadioButton(new DefaultGroup("Program to test"), "Product id:");
	}

	public String getTextProductId() {
		return new RadioButton(new DefaultGroup("Program to test"), "Product id:").getText();
	}

	public CheckBox getCHB() {
		return new CheckBox(0);
	}

	public String getText() {
		return new CheckBox(0).getText();
	}

	public LabeledText getProviderTXT() {
		return new LabeledText("Provider:");
	}

	public String getTextProvider() {
		return new LabeledText("Provider:").getText();
	}

	public LabeledText getVersionTXT() {
		return new LabeledText("Version:");
	}

	public String getTextVersion() {
		return new LabeledText("Version:").getText();
	}

	public LabeledText getPluginIdTXT() {
		return new LabeledText("Plug-in id:");
	}

	public String getTextPluginId() {
		return new LabeledText("Plug-in id:").getText();
	}

	public LabeledText getPluginNameTXT() {
		return new LabeledText("Plug-in Name:");
	}

	public String getTextPluginName() {
		return new LabeledText("Plug-in Name:").getText();
	}

	public CheckBox getCreateTasksForGeneratedTestMethodsCHB() {
		return new CheckBox("Create tasks for generated test methods");
	}

	public String getTextCreateTasksForGeneratedTestMethods() {
		return new CheckBox("Create tasks for generated test methods").getText();
	}

	public CheckBox getCreateFinalMethodStubsCHB() {
		return new CheckBox("Create final method stubs");
	}

	public String getTextCreateFinalMethodStubs() {
		return new CheckBox("Create final method stubs").getText();
	}

	public PushButton getDeselectAllBTN() {
		return new PushButton("Deselect All");
	}

	public String getTextDeselectAll() {
		return new PushButton("Deselect All").getText();
	}

	public PushButton getSelectAllBTN() {
		return new PushButton("Select All");
	}

	public String getTextSelectAll() {
		return new PushButton("Select All").getText();
	}

	public PushButton getBrowseBTN() {
		return new PushButton("Browse...");
	}

	public String getTextBrowse() {
		return new PushButton("Browse...").getText();
	}

	public LabeledText getClassUnderTestTXT() {
		return new LabeledText("Class under test:");
	}

	public String getTextClassUnderTest() {
		return new LabeledText("Class under test:").getText();
	}

	public CheckBox getGenerateCommentsCHB() {
		return new CheckBox("Generate comments");
	}

	public String getTextGenerateComments() {
		return new CheckBox("Generate comments").getText();
	}

	public CheckBox getConstructorCHB() {
		return new CheckBox("constructor");
	}

	public String getTextConstructor() {
		return new CheckBox("constructor").getText();
	}

	public CheckBox getTearDownCHB() {
		return new CheckBox("tearDown()");
	}

	public String getTextTearDown() {
		return new CheckBox("tearDown()").getText();
	}

	public CheckBox getSetUpCHB() {
		return new CheckBox("setUp()");
	}

	public String getTextSetUp() {
		return new CheckBox("setUp()").getText();
	}

	public CheckBox getTearDownAfterClassCHB() {
		return new CheckBox("tearDownAfterClass()");
	}

	public String getTextTearDownAfterClass() {
		return new CheckBox("tearDownAfterClass()").getText();
	}

	public CheckBox getSetUpBeforeClassCHB() {
		return new CheckBox("setUpBeforeClass()");
	}

	public String getTextSetUpBeforeClass() {
		return new CheckBox("setUpBeforeClass()").getText();
	}

	public LabeledText getSuperclassTXT() {
		return new LabeledText("Superclass:");
	}

	public String getTextSuperclass() {
		return new LabeledText("Superclass:").getText();
	}

	public LabeledText getNameTXT() {
		return new LabeledText("Name:");
	}

	public String getTextName() {
		return new LabeledText("Name:").getText();
	}

	public LabeledText getPackageTXT() {
		return new LabeledText("Package:");
	}

	public String getTextPackage() {
		return new LabeledText("Package:").getText();
	}

	public LabeledText getSourceFolderTXT() {
		return new LabeledText("Source folder:");
	}

	public String getTextSourceFolder() {
		return new LabeledText("Source folder:").getText();
	}

	public RadioButton getNewJUnitTestRDB() {
		return new RadioButton("New JUnit 4 test");
	}

	public String getTextNewJUnitTest() {
		return new RadioButton("New JUnit 4 test").getText();
	}

	public void activateNewRedDeerTestPlugin() {
		new DefaultShell("New RedDeer Test Plugin").setFocus();
	}

	public DefaultShell getShellNewRedDeerTestPlugin() {
		return new DefaultShell("New RedDeer Test Plugin");
	}

	public String getTextNewRedDeerTestPlugin() {
		return new DefaultShell("New RedDeer Test Plugin").getText();
	}

	public boolean isSelectedApplicationIdGroup() {
		return new RadioButton(new DefaultGroup("Program to test"), "Application id:").isSelected();
	}

	public boolean isSelectedProductIdGroup() {
		return new RadioButton(new DefaultGroup("Program to test"), "Product id:").isSelected();
	}

	public boolean isCheckedCHB() {
		return new CheckBox(0).isChecked();
	}

	public boolean isCheckedCreateTasksForGeneratedTestMethodsCHB() {
		return new CheckBox("Create tasks for generated test methods").isChecked();
	}

	public boolean isCheckedCreateFinalMethodStubsCHB() {
		return new CheckBox("Create final method stubs").isChecked();
	}

	public boolean isCheckedGenerateCommentsCHB() {
		return new CheckBox("Generate comments").isChecked();
	}

	public boolean isCheckedConstructorCHB() {
		return new CheckBox("constructor").isChecked();
	}

	public boolean isCheckedTearDownCHB() {
		return new CheckBox("tearDown()").isChecked();
	}

	public boolean isCheckedSetUpCHB() {
		return new CheckBox("setUp()").isChecked();
	}

	public boolean isCheckedTearDownAfterClassCHB() {
		return new CheckBox("tearDownAfterClass()").isChecked();
	}

	public boolean isCheckedSetUpBeforeClassCHB() {
		return new CheckBox("setUpBeforeClass()").isChecked();
	}

	public boolean isSelectedNewJUnitTestRDB() {
		return new RadioButton("New JUnit 4 test").isSelected();
	}

	public void setTextProvider(String str) {
		new LabeledText("Provider:").setText(str);
	}

	public void setTextVersion(String str) {
		new LabeledText("Version:").setText(str);
	}

	public void setTextPluginId(String str) {
		new LabeledText("Plug-in id:").setText(str);
	}

	public void setTextPluginName(String str) {
		new LabeledText("Plug-in Name:").setText(str);
	}

	public void setTextClassUnderTest(String str) {
		new LabeledText("Class under test:").setText(str);
	}

	public void setTextSuperclass(String str) {
		new LabeledText("Superclass:").setText(str);
	}

	public void setTextName(String str) {
		new LabeledText("Name:").setText(str);
	}

	public void setTextPackage(String str) {
		new LabeledText("Package:").setText(str);
	}

	public void setTextSourceFolder(String str) {
		new LabeledText("Source folder:").setText(str);
	}

	public void toggleApplicationIdGroup(boolean choice) {
		new RadioButton(new DefaultGroup("Program to test"), "Application id:").toggle(choice);
	}

	public void toggleProductIdGroup(boolean choice) {
		new RadioButton(new DefaultGroup("Program to test"), "Product id:").toggle(choice);
	}

	public void toggleCHB(boolean choice) {
		new CheckBox(0).toggle(choice);
	}

	public void toggleCreateTasksForGeneratedTestMethodsCHB(boolean choice) {
		new CheckBox("Create tasks for generated test methods").toggle(choice);
	}

	public void toggleCreateFinalMethodStubsCHB(boolean choice) {
		new CheckBox("Create final method stubs").toggle(choice);
	}

	public void toggleGenerateCommentsCHB(boolean choice) {
		new CheckBox("Generate comments").toggle(choice);
	}

	public void toggleConstructorCHB(boolean choice) {
		new CheckBox("constructor").toggle(choice);
	}

	public void toggleTearDownCHB(boolean choice) {
		new CheckBox("tearDown()").toggle(choice);
	}

	public void toggleSetUpCHB(boolean choice) {
		new CheckBox("setUp()").toggle(choice);
	}

	public void toggleTearDownAfterClassCHB(boolean choice) {
		new CheckBox("tearDownAfterClass()").toggle(choice);
	}

	public void toggleSetUpBeforeClassCHB(boolean choice) {
		new CheckBox("setUpBeforeClass()").toggle(choice);
	}

	public void toggleNewJUnitTestRDB(boolean choice) {
		new RadioButton("New JUnit 4 test").toggle(choice);
	}

}